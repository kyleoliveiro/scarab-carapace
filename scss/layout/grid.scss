// Grid
//
// **Sets up a responsive float-based grid layout**
//
// .grid--gutter-x-0 - Remove horizontal gutters
// .grid--gutter-y-0 - Remove vertical gutters
// .grid--gutter-0   - Remove gutters
//
// Markup: grid.html
//
// Weight: 6
//
// Style guide: Layout.Grid

@include component ( grid ) {
	$options: get( components, grid, options );
	$columns:  map-get( $options, columns );
	$gutter-x: map-get( $options, gutter-x );
	$gutter-y: map-get( $options, gutter-y );

	@extend %clearfix !optional;

	margin-bottom: $gutter-y * -1;
	margin-left: $gutter-x * 0.5 * -1;
	margin-right: $gutter-x * 0.5 * -1;

	& > [ class ^= g__ ] {
		width: 100%;
		float: left;
		margin-bottom: $gutter-y;
		padding-left: $gutter-x * 0.5;
		padding-right: $gutter-x * 0.5;
		box-sizing: border-box;

		& + [ class ^= g__ ] {
			clear: right;
		}
	}

	@each $column-size in $columns {
		&--#{ $column-size } {
			@for $column from 1 through $column-size {
				.g__#{ $column } {
					@include breakpoint-hooks() {
						width: 100% / $column-size * $column;	
					}
				}

				.g--push-#{ $column } {
					@include breakpoint-hooks() {
						margin-left: 100% / $column-size * $column;
					}
				}
			}
		}
	}

	&--gutter-x-0 {
		@include breakpoint-hooks() {
			margin-left: 0;
			margin-right: 0;

			& > [ class ^= g__ ] {
				padding-left: 0;
				padding-right: 0;	
			}
		}
	}

	&--gutter-y-0 {
		@include breakpoint-hooks() {
			margin-bottom: 0;

			& > [ class ^= g__ ] {
				margin-bottom: 0;
			}
		}
	}

	&--gutter-0 {
		@include breakpoint-hooks() {
			margin-left: 0;
			margin-right: 0;
			margin-bottom: 0;

			& > [ class ^= g__ ] {
				padding-left: 0;
				padding-right: 0;	
				margin-bottom: 0;
			}
		}
	}
}
