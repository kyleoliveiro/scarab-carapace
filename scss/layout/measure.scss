// Measure
//
// **Contains an element to a maximum width based on its font size**
//
// .measure--xs - Extra small measure
// .measure--s  - Small measure
// .measure--l  - Large measure
// .measure--xl - Extra large measure
// 
// Markup: measure.html
//
// Weight: 2
//
// Style guide: Layout.Measure

@include component ( measure ) {

	$options: get( components, measure, options );
	$min: map-get( $options, min );
	$max: map-get( $options, max );
	$size-mods: map-get( $options, size-mods );
	$breakpoint-mods: map-get( $options, breakpoint-mods );

	$average: ( $min + $max ) / 2;
	$step: ( $max - $min ) / length( $size-mods );
	$measure: $average;
	
	@include breakpoint-hooks( $breakpoint-mods ) {
		max-width: $measure;
	}

	@for $i from 1 through length( $size-mods ) {
		$size: nth( $size-mods, $i );
		$measure: $min + ($step * ($i - 1));

		@if $measure >= $average {
			$measure: $min + ($step * ($i));
		}
		
		&--#{$size} {
			@include breakpoint-hooks( $breakpoint-mods ) {
				max-width: $measure;
			}
		}
	}

}
